name: CBOE options daily parquet

on:
  schedule:
    - cron: '0 11 * * 1-5'
  workflow_dispatch: # Allow manual trigger from GitHub Actions UI

permissions:
  contents: write

jobs:
  set-release-vars:
    runs-on: ubuntu-latest    
    outputs:
      cboe-tag: ${{ steps.cboedata.outputs.RELEASE_NAME }}      
    steps:
      - id: cboedata
        run: echo "RELEASE_NAME=CBOE_OPTIONS_DATA_$(date '+%Y-%m-%d-%H-%M-%S')" >> ${GITHUB_OUTPUT}

  cboe-options-daily-parquet:
    runs-on: ubuntu-latest
    needs: set-release-vars
    env:
      RELEASE_NAME: ${{needs.set-release-vars.outputs.cboe-tag}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9" # Specify your Python version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests pyarrow
      - name: Run the Python script
        run: python jobs/main-options-cboe.py -u
      - name: Upload artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: cboe-data
          if-no-files-found: error
          path: |
            ${{ github.workspace}}/temp/*.parquet
            ${{ github.workspace}}/data/cboe-options-summary.json
  release-cboe-data:
    runs-on: ubuntu-latest
    needs: [set-release-vars, cboe-options-daily-parquet]
    env:
      RELEASE_NAME: ${{needs.set-release-vars.outputs.cboe-tag}}
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Fetch all commits to ensure the latest state is available
          ref: main        # Ensure the latest state from the main branch is checked out
      - name: Download snapshot images Artifact
        uses: actions/download-artifact@v4
        with:
          name: cboe-data
      # - name: Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "temp/*.parquet"
      #     tag: ${{ env.RELEASE_NAME }}
      #     commit: "main"
      #     allowUpdates: "true"
      #     artifactErrorsFailBuild: "true"
      - name: Release
        uses: mnsrulz/action-gh-release@master
        with:
          files: "temp/*.parquet"
          tag_name: ${{ env.RELEASE_NAME }}

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add --all
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
          else
            git commit -m "Update data/cboe-options-summary.json (via GitHub Actions)"
            git push
          fi
